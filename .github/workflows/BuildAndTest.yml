name: BuildAndTest
on:
  workflow_run:
    workflows: ['Copy']                    
    types:
      - completed
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x' ]
        
    steps:
      - uses: actions/checkout@v2
        with:
          ref: temp
          
      - name: Check file existence1
        id: check_files1
        uses: andstor/file-existence-action@v1
        with:
          files: "**/*.csproj"
        
      - name: Check file existence2
        id: check_files2
        uses: andstor/file-existence-action@v1
        with:
          files: "**/*.cpp"        
          
          
        if: steps.check_files1.outputs.files_exists == 'true'     
          
          
          
      - name: Setup dotnet
        if: steps.check_files1.outputs.files_exists == 'true'
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}  
      - name: Create folder
        run: |
          mkdir myNewFolder 
          
      - name: Setup NuGet.exe for use with actions
        if: steps.check_files1.outputs.files_exists == 'true'
        uses: NuGet/setup-nuget@v1.0.5
        
      - name: Create sln
        continue-on-error: true
        id: step1
        working-directory: ./myNewFolder
        if: steps.check_files1.outputs.files_exists == 'true'
        run: dotnet new sln --name t
          
      - name: Add csproj
        continue-on-error: true
        id: step2
        if: steps.check_files1.outputs.files_exists == 'true'
        run: |
          dotnet sln ./myNewFolder/t.sln add **/TestConsoleApp.csproj
          dotnet add XUnitTestProject1.csproj reference **/TestConsoleApp.csproj
          dotnet sln ./myNewFolder/t.sln add XUnitTestProject1.csproj
          nuget restore ./myNewFolder/t.sln
                  
      - name: Build
        continue-on-error: true
        id: step3
        if: steps.check_files1.outputs.files_exists == 'true'
        run: |
          dotnet build ./myNewFolder/t.sln
      - name: Test
        continue-on-error: true
        id: step4
        if: steps.check_files1.outputs.files_exists == 'true'
        run: |
          dotnet test XUnitTestProject1.csproj --logger "trx;LogFileName=test-results.trx"       
          
      - name: Publish Unit Test Results
        continue-on-error: true
        id: step5
        if: steps.check_files1.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: test-results  
          path: ./**/TestResults/*.trx

      - name: WorkflowStatus1
        id: conclusion
        if: |
          steps.check_files1.outputs.files_exists == 'true' &&
          steps.step1.outcome == 'success' &&
          steps.step2.outcome == 'success' &&
          steps.step3.outcome == 'success' &&
          steps.step4.outcome == 'success' &&
          steps.step5.outcome == 'success' 
        shell: bash
        run: |
          expr 0+0 > conclusion.txt
          
      - name: WorkflowStatus2
        if: |
          (steps.check_files1.outputs.files_exists == 'true' &&
          steps.step1.outcome != 'success') ||
          (steps.check_files1.outputs.files_exists == 'true' &&
          steps.step2.outcome != 'success') ||
          (steps.check_files1.outputs.files_exists == 'true' &&
          steps.step3.outcome != 'success') ||
          (steps.check_files1.outputs.files_exists == 'true' &&
          steps.step5.outcome != 'success')
        shell: bash
        run: |
          expr 0+1 > conclusion.txt    
          
          
      - name: WorkflowStatus3
        if: |
          steps.check_files1.outputs.files_exists == 'true' &&
          steps.step1.outcome == 'success' &&
          steps.step2.outcome == 'success' &&
          steps.step4.outcome != 'success' &&
          steps.step3.outcome == 'success' &&
          steps.step5.outcome == 'success'
        shell: bash
        run: |
          expr 0+2 > conclusion.txt     
          
      - name: Upload conclusion
        if: steps.check_files1.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: conc
          path: ./**/*.txt   
          
        
      - name: Install gtest manually
        id: cpp_s1
        if: steps.check_files2.outputs.files_exists == 'true'
        run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && ls -l lib && sudo cp lib/*.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a
      - uses: actions/checkout@v2
      - name: configure
        id: cpp_s2
        if: steps.check_files2.outputs.files_exists == 'true'
        run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" ..
      - name: make
        id: cpp_s3
        if: steps.check_files2.outputs.files_exists == 'true'
        run: cd build && make
      - name: Run Test
        id: cpp_s4
        if: steps.check_files2.outputs.files_exists == 'true'
        run: /home/runner/work/mod-lab00-training/mod-lab00-training/build/test/mod-lab00-training.test 
