name: BuildAndTestCS
on:
  workflow_run:
    workflows: ['Copy']                    
    types:
      - completed
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        dotnet-version: [ '3.1.x' ]
        
    steps:
      - uses: actions/checkout@v2
        with:
          ref: temp
          token: ${{ secrets.TOKEN }}
          
      - name: Check file existence1
        id: check_files1
        uses: andstor/file-existence-action@v1.1.0
        with:
          files: "**/*.csproj"
        
      - name: Setup dotnet
        if: steps.check_files1.outputs.files_exists == 'true'
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}  
      - name: Create folder
        run: |
          mkdir myNewFolder 
          
      - name: Setup NuGet.exe for use with actions
        if: steps.check_files1.outputs.files_exists == 'true'
        uses: NuGet/setup-nuget@v1.0.5
        
      - name: Create sln
        continue-on-error: true
        id: step1
        working-directory: ./myNewFolder
        if: steps.check_files1.outputs.files_exists == 'true'
        run: dotnet new sln --name t
          
      - name: Add csproj
        continue-on-error: true
        id: step2
        if: steps.check_files1.outputs.files_exists == 'true'
        run: |
          dotnet sln ./myNewFolder/t.sln add **/TestConsoleApp.csproj
          dotnet add XUnitTestProject1.csproj reference **/TestConsoleApp.csproj
          dotnet sln ./myNewFolder/t.sln add XUnitTestProject1.csproj
          nuget restore ./myNewFolder/t.sln
                  
      - name: Build
        continue-on-error: true
        id: step3
        if: steps.check_files1.outputs.files_exists == 'true'
        run: |
          dotnet build ./myNewFolder/t.sln

      - name: Test
        continue-on-error: true
        id: step4
        if: steps.check_files1.outputs.files_exists == 'true'
        run: |
          dotnet test XUnitTestProject1.csproj --logger "trx;LogFileName=test-results.trx"  